name: CI
on:
  push:
    tags:
      - v*
  pull_request:
jobs:
  linux:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: 1.16.5
      - run: |
          sudo dpkg --add-architecture arm64
          echo '
          deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ focal main restricted universe multiverse
          deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ focal-updates main restricted universe multiverse
          ' | sudo tee /etc/apt/sources.list.d/arm64.list
          sudo apt-get update || true
          sudo apt-get install -y gcc-aarch64-linux-gnu libgmp-dev:arm64
      - uses: actions/checkout@v2
      - name: go build
        run: |
          go build -v -ldflags '-w -s -extldflags -static' -o redpwnpow-linux-amd64 ./cmd/redpwnpow
          CC=aarch64-linux-gnu-gcc CGO_ENABLED=1 GOARCH=arm64 go build -v -ldflags '-w -s -extldflags -static' -o redpwnpow-linux-arm64 ./cmd/redpwnpow
      - uses: actions/upload-artifact@v2
        with:
          name: linux
          path: redpwnpow-linux-*
  darwin:
    runs-on: macos-10.15
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: 1.16.5
      - uses: actions/checkout@v2
      - name: go build
        run: |
          lib_tmp=$(mktemp -d)
          cp /usr/local/opt/gmp/lib/libgmp.a "$lib_tmp"
          go build -v -ldflags "-w -s -extldflags -L$lib_tmp" -o redpwnpow-darwin-amd64 ./cmd/redpwnpow
      - uses: actions/upload-artifact@v2
        with:
          name: darwin
          path: redpwnpow-darwin-*
  windows:
    runs-on: windows-2019
    steps:
      - uses: msys2/setup-msys2@v2
        with:
          install: mingw-w64-x86_64-go mingw-w64-x86_64-gcc mingw-w64-x86_64-gmp
      - uses: actions/checkout@v2
      - name: go build
        shell: msys2 {0}
        run: go build -v -ldflags '-w -s -extldflags -static' -o redpwnpow-windows-amd64.exe ./cmd/redpwnpow
      - uses: actions/upload-artifact@v2
        with:
          name: windows
          path: redpwnpow-windows-*
  release:
    runs-on: ubuntu-20.04
    if: startsWith(github.ref, 'refs/tags/v')
    needs:
      - linux
      - darwin
      - windows
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          path: build
      - uses: softprops/action-gh-release@v1
        with:
          files: build/*/redpwnpow-*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: cloudflare
        run: >
          curl -sSXPUT https://api.cloudflare.com/client/v4/accounts/${{ secrets.CLOUDFLARE_ACCOUNT }}/workers/scripts/pow
          -H 'authorization:Bearer ${{ secrets.CLOUDFLARE_TOKEN }}' -Hcontent-type:application/javascript
          -d "addEventListener('fetch',e=>e.respondWith(new Response(atob('$(sed "s|VERSION|${GITHUB_REF#refs/tags/}|g" cmd/redpwnpow/run.sh | base64 -w0)'))))"
